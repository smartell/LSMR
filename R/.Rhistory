source('~/Documents/UBC_Courses/Fish_504/Tutorials2011/BrownieSim.R')
Brownie Model Simulator.
Random number seed
set.seed(8879)
I <- 3 #Number of years of marking
J <- 4 #Number of years of recaps
m <- 0.5 #true natural mortality
ni <- rpois(I,550)
fj <- rbeta(J,4,12)
P = recapture probability
Z = total mortality
F = fishing mortality
R = recaptures
P=Z=F=R=matrix(nrow=I,ncol=J)
R[i,i:J]=rmultinom(1,ni[i],p)
print(cbind(ni,R))
End of data generation.
PARAMETER_SECTION
theta = list(log.m=log(0.5),log.fj=log(fj))# rep(0.1,length=J))
itheta = as.relistable(theta)
PROCEDURE_SECTION
brownie <- function(theta)
with(relist(theta,skeleton=itheta),{
m=exp(log.m)
fj=exp(log.fj)
compute predicted recaptures given ni
P=Z=F=Rhat=matrix(nrow=I,ncol=J)
cj = fj/(m+fj)*(1-exp(-m-fj))
nll = 0
for(i in 1:I)
tmp_m=(seq(1,length(i:J),1)-1)*m
tmp_f=c(0,cumsum(fj[i:(J-1)]))
Z[i,i:J]=tmp_m + tmp_f
p=exp(-Z[i,i:J])*cj[i:J]
Rhat[i,i:J]=ni[i]*p#rmultinom(1,ni[i],p)
nll=nll   +sum(-dpois(R[i,i:J],Rhat[i,i:J],log=TRUE))
nll=nll+sum(-dmultinom(R[i,i:J],prob=p,log=TRUE))
return(nll)
})
Solver routine to estimate parameters.
solver<-function(theta,objfun,hess=FALSE)
fit<-optim(theta,objfun,method="BFGS",hessian=hess)
if(hess==TRUE)
{
H=fit$hessian     #Matrix of 2nd derivatives
V=solve(H)        #Variance covariance matrix
std=sqrt(diag(V))  #Std of parameters
R=V/(std %o% std) #Correlations.
fit$R=R; fit$std=std
return(fit)
}
fit <- solver(unlist(itheta),brownie,TRUE)
print(exp(fit$par))
source('~/Documents/UBC_Courses/Fish_504/ASSIGNMENTS/FISHGROWTH/GrowthSim.R')
dir()
source('~/Documents/UBC_Courses/Fish_504/ASSIGNMENTS/FISHGROWTH/vonB.R')
fit$par
iF<-read.table(pipe("pbpaste"))
matplot(iF)
F<-read.table(pipe("pbpaste"))
matlines(F)
0.2
sqrt(0.2)
sqrt(1-0.2)
1-sqrt(0.2)
plot(bt)
bt=scan()
mean(bt)
mean(bt[-1])
?dpois
?dnbinom
x <- rnbinom(100,30,0.3,12)
x <- rnbinom(100,8,0.4)
mean(x)
sd(x)
x <- rnbinom(100,8,0.2)
x <- rnbinom(100,8,0.8)
x <- rnbinom(100,8,0.75)
x <- rnbinom(100,8,0.5)
hist(x)
x
dnbinom(10,3,8,log=T)
dnbinom(10,mu=3,size=8,log=T)
dnbinom(0,mu=3,size=8,log=T)
--------------------------------------------------------------------------- ##
# R-script for plotting output from LSMR.rep#
# Author: Steven Martell#
# DATE: July 9, 2012#
# LOCATION: Wailea Hawaii#
# DEPENDENCIES: read.admb.R#
##
# --------------------------------------------------------------------------- ##
source("read.admb.R", echo=FALSE)#
#
.SAVEFIGS		<- FALSE#
.PRESENTATION	<- FALSE#
.FILENAME		<- "../ADMB/srcLSMR/lsmr"#
.FIGDIR			<- "../FIGS/LSMR/"#
#
obj				<- read.admb(.FILENAME)#
#
class(obj)		<- c(class(obj), "lsmr")#
# --------------------------------------------------------------------------- ##
# S3 Method for class 'lsmr'                                                  ##
# --------------------------------------------------------------------------- ##
print.lsmr <- function(obj, ...)#
{#
	print(attributes(obj))#
}#
#
plot.lsmr <- function(obj, ...)#
{#
	opar <- par(no.readonly=TRUE)#
	with(obj, {#
		par(mfcol=c(2, 2), las=1)#
		plot(yr, Nt, type="l", ylim=c(0, max(Nt))#
		, xlab="Year", ylab="Abundance (numbers > 30 mm)")#
		gletter(1)#
		plot(yr, Rt, type="h", ylim=c(0, max(Rt)) #
		, xlab="Year", ylab="Annual recruits ")#
		gletter(2)#
		plot(yr, fi, type="o", ylim=c(0, max(fi))#
		, xlab="Year", ylab="Capture probability")#
		gletter(3)#
		plot(xmid, mx, type="o", ylim=c(0, max(mx))#
		, xlab="Size class (cm)", ylab="Natural mortality")#
		abline(h=m_infty, col=2)#
		gletter(4)#
		par(opar)#
		.plotLF(xmid, i_C, Chat)#
		.plotLF(xmid, i_M, Mhat)#
		.plotLF(xmid, i_R, Rhat)#
	})#
	par(opar)#
}#
#
.plotLF <- function(x, O, P, ...)#
{#
	# This funciton plots the observed (O) and predicted (P) #
	# length frequency distributions.#
	opar <- par(no.readonly=TRUE)#
	n  <- dim(O)[1]#
	nr <- round(sqrt(n))#
	nc <- round(n/nr)#
	par(mfcol=c(nr, nc), mar=c(0, 0, 0, 0))#
	par(oma=c(5, 5, 3, 1), font.main=1)#
	ymax = max(O[, -1:-2], P)#
	for(i in 1:n)#
	{#
		plot(x, O[i, -1:-2], type="h", xlab="", ylab="", xaxt="n", yaxt="n", ylim=c(0, ymax))#
		lines(x, P[i, ], col=4)#
		title(main=O[i, 1], line=-1)#
		mfg <- par(no.readonly=T)$mfg#
		if(mfg[2]==1) axis(2)#
		if(mfg[1]==nr) axis(1)#
	}#
	mtext(c("Size class (cm)", "Frequency"), side=c(1, 2), outer=TRUE, line=2.5, las=0)#
	par(opar)#
}
setwd('/Users/stevenmartell/Documents/CONSULTING/HumpbackChub/HBC_2011_Assessment/R')
summary(obj)
graphics.off()
--------------------------------------------------------------------------- ##
# R-script for plotting output from LSMR.rep#
# Author: Steven Martell#
# DATE: July 9, 2012#
# LOCATION: Wailea Hawaii#
# DEPENDENCIES: read.admb.R#
##
# --------------------------------------------------------------------------- ##
source("read.admb.R", echo=FALSE)#
#
.SAVEFIGS		<- FALSE#
.PRESENTATION	<- FALSE#
.FILENAME		<- "../ADMB/srcLSMR/lsmr"#
.FIGDIR			<- "../FIGS/LSMR/"#
#
obj				<- read.admb(.FILENAME)#
class(obj)		<- c(class(obj), "lsmr")#
# --------------------------------------------------------------------------- ##
# S3 Method for class 'lsmr'                                                  ##
# --------------------------------------------------------------------------- ##
print.lsmr <- function(obj, ...)#
{#
	print(attributes(obj))#
}#
#
plot.lsmr <- function(obj, ...)#
{#
	opar <- par(no.readonly=TRUE)#
	with(obj, {#
		par(mfcol=c(2, 2), las=1)#
		plot(yr, Nt, type="l", ylim=c(0, max(Nt))#
		, xlab="Year", ylab="Abundance (numbers > 30 mm)")#
		gletter(1)#
		plot(yr, Rt, type="h", ylim=c(0, max(Rt)) #
		, xlab="Year", ylab="Annual recruits ")#
		gletter(2)#
		plot(yr, fi, type="o", ylim=c(0, max(fi))#
		, xlab="Year", ylab="Capture probability")#
		gletter(3)#
		plot(xmid, mx, type="o", ylim=c(0, max(mx))#
		, xlab="Size class (cm)", ylab="Natural mortality")#
		abline(h=m_infty, col=2)#
		gletter(4)#
		par(opar)#
		.plotLF(xmid, i_C, Chat)#
		.plotLF(xmid, i_M, Mhat)#
		.plotLF(xmid, i_R, Rhat)#
	})#
	par(opar)#
}#
#
.plotLF <- function(x, O, P, ...)#
{#
	# This funciton plots the observed (O) and predicted (P) #
	# length frequency distributions.#
	opar <- par(no.readonly=TRUE)#
	n  <- dim(O)[1]#
	nr <- round(sqrt(n))#
	nc <- round(n/nr)#
	par(mfcol=c(nr, nc), mar=c(0, 0, 0, 0))#
	par(oma=c(5, 5, 3, 1), font.main=1)#
	ymax = max(O[, -1:-2], P)#
	for(i in 1:n)#
	{#
		plot(x, O[i, -1:-2], type="h", xlab="", ylab="", xaxt="n", yaxt="n", ylim=c(0, ymax))#
		lines(x, P[i, ], col=4)#
		title(main=O[i, 1], line=-1)#
		mfg <- par(no.readonly=T)$mfg#
		if(mfg[2]==1) axis(2)#
		if(mfg[1]==nr) axis(1)#
	}#
	mtext(c("Size class (cm)", "Frequency"), side=c(1, 2), outer=TRUE, line=2.5, las=0)#
	par(opar)#
}
plot(obj)
